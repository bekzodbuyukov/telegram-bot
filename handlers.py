import re
import time
import logging

from tinydb.operations import set
from main import bot, dp, db, User
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.types import Message
from config import ADMIN_ID, BOT_VERSION, SUPPORT
from keyboards import MAIN_MENU, SETTINGS_MENU, CHANGING_GROUP_MENU
from timetable_controller import does_group_exist, does_timetable_exist, show_timetable_for_today


# state
class UserInfo(StatesGroup):
    group = State()


# post-state
class Post(StatesGroup):
    text = State()
    confirm = State()


async def notify_admin(dp):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."""
    text = f'<b>–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!</b>'
    try:
        for admin_id in ADMIN_ID:
            await bot.send_message(chat_id=admin_id, text=text, reply_markup=MAIN_MENU)
    except:
        logging.info(f'–£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {admin_id} –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')


async def bye_admin(dp):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. """
    text = f'<b>–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>'
    try:
        for admin_id in ADMIN_ID:
            await bot.send_message(chat_id=admin_id, text=text, reply_markup=MAIN_MENU)
    except:
        logging.info(f'–£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {admin_id} –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')


@dp.message_handler(commands='start')
async def send_welcome(message: Message):
    """ –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /start, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω-–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω–∞—à–µ–π –ë–î.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—â–∞—Ç—å—Å—è —Å –Ω–∏–º –ø–æ–∫–∞–∑—ã–≤–∞—è –º–µ–Ω—é.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –Ω–∞—á–∏–Ω–∞–µ–º –µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å.
    """
    text_for_existing_user = f'–†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞, {message.chat.first_name}!'
    text_for_new_user = f'–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ {message.chat.first_name}, —è –≤–∞—à –±–æ—Ç' \
                        f' –ø–æ–º–æ—â–Ω–∏–∫!\n\n–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –∏–∑ –∫–∞–∫–æ–π –≤—ã ' \
                        f'–≥—Ä—É–ø–ø—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã.\n\n' \
                        f'–ü—Ä–∏–º–µ—Ä: <b>–ë–ü–ò19-02</b> –∏–ª–∏ <b>–±–ø–∏19-02</b>'

    if db.search(User.id == message.chat.id):
        await message.answer(text_for_existing_user, reply_markup=MAIN_MENU)
    else:
        await UserInfo.group.set()
        await message.answer(text_for_new_user)


@dp.message_handler(text='/update')
async def update_bot(message: Message):
    """ –ü–æ —Å—É—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é –±–æ—Ç–∞, –µ—Å–ª–∏ –æ–Ω —Å–ª–æ–º–∞–ª—Å—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—è.
    P.S.: –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–π –∫–æ—Å—Ç—ã–ª—å."""
    update_text = f'–ë–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ <b>{BOT_VERSION}</b>!'
    await message.answer(update_text, reply_markup=MAIN_MENU)


@dp.message_handler(text='/send_post')
async def send_public_post(message: Message):
    """ –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞, –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.
    –ù–∞—á–∏–Ω–∞–µ—Ç —Ü–∏–∫–ª –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ä–∞—Å—Å—ã–ª–∫–µ."""
    text_to_admin = '–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –æ–ø—Ç—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.'
    not_allowed = '–í–∞–º —ç—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è! ;)'

    if str(message.chat.id) in ADMIN_ID:
        await Post.text.set()
        await message.answer(text_to_admin, reply_markup=MAIN_MENU)
    else:
        await message.answer(not_allowed, reply_markup=MAIN_MENU)


@dp.message_handler(state=Post.text)
async def got_text(message: Message, state: FSMContext):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
    P.S.: –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—Å—Ç–∞."""
    await state.update_data(text=message.text)

    text_before_confirmation = f'–í–∞—à —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω:\n\n{message.text}\n\n' \
                               f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ' \
                               f'<b>–î–ê</b>, –¥–ª—è –æ—Ç–º–µ–Ω—ã - <b>–ù–ï–¢</b>.'
    await Post.confirm.set()
    await message.answer(text_before_confirmation, reply_markup=MAIN_MENU)


@dp.message_handler(lambda message: message.text.upper() == '–ù–ï–¢', state=Post.confirm)
async def cancel_publication(message: Message, state: FSMContext):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏. """
    await state.finish()
    cancellation_text = '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.'
    await message.answer(cancellation_text, reply_markup=MAIN_MENU)


@dp.message_handler(lambda message: message.text.upper() == '–î–ê', state=Post.confirm)
async def publish(message: Message, state: FSMContext):
    """ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ä–∞—Å—Å—ã–ª–∫—É.
    –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∞, —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏–≤—à–∏–π —Ä–∞—Å—Å—ã–ª–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    –ø–æ–ª—É—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –Ω–µ–±–æ–ª—å—à—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
    users = db.all()

    counter = 0
    async with state.proxy() as data:
        for user in users:
            if counter % 10 == 0:
                time.sleep(0.5)
            await bot.send_message(chat_id=user['id'], text=data['text'], reply_markup=MAIN_MENU)
            counter += 1

    await state.finish()
    publication_ended_text = f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞.\n\n' \
                             f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ <b>{counter}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.'
    await message.answer(publication_ended_text, reply_markup=MAIN_MENU)


@dp.message_handler(lambda message: message.text == '–û—Ç–º–µ–Ω–∏—Ç—å', state=UserInfo.group)
async def cancel_process(message: Message, state: FSMContext):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. """
    await state.finish()
    text = '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.'
    await message.answer(text, reply_markup=SETTINGS_MENU)


@dp.message_handler(lambda message: not re.match(r'[–∞-—è–ê-–Ø]{,5}\d{2}-\d{2}', message.text), state=UserInfo.group)
async def got_error_group_name(message: Message):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. """
    error_text = '–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Å—Ç—Ä–æ–≥–∏–π —Ñ–æ—Ä–º–∞—Ç.\n\n' \
                 '–ü—Ä–∏–º–µ—Ä: <b>–ë–ü–ò19-02</b> –∏–ª–∏ <b>–±–ø–∏19-02</b>'
    return await message.reply(error_text)


@dp.message_handler(lambda message: re.match(r'[–∞-—è–ê-–Ø]{,5}\d{2}-\d{2}', message.text), state=UserInfo.group)
async def true_group_name(message: Message, state: FSMContext):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. """
    await state.update_data(group=message.text.upper())
    needed_user = db.search(User.id == message.chat.id)

    async with state.proxy() as data:
        if needed_user:
            db.update(set('group', data['group']), User.id == message.chat.id)
        else:
            db.insert({'id': message.chat.id, 'group': data['group']})

    await state.finish()
    success_text = '–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤—Å—ë –∑–∞–ø–æ–º–Ω–∏–ª, —Å–ø–∞—Å–∏–±–æ. –ü–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!'
    await message.answer(success_text, reply_markup=MAIN_MENU)


@dp.message_handler(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def show_main_menu(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. """
    text = '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
    await message.answer(text, reply_markup=MAIN_MENU)


@dp.message_handler(text='‚ÑπÔ∏è –û –±–æ—Ç–µ')
async def show_statistics(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ. """
    users = len(db)
    text = f'<b>–û –±–æ—Ç–µ</b>\n\n' \
           f'–í–µ—Ä—Å–∏—è: {BOT_VERSION}\n' \
           f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users}\n' \
           f'–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞: {SUPPORT}\n\n' \
           f'–ï—Å–ª–∏ –≤–∞–º –Ω–µ —É–¥–æ–±–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, ' \
           f'–º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è <a href="https://sibsau.ru">Android</a> ' \
           f'–∏–ª–∏ <a href="https://sibsau.ru">iOS</a>.'
    await message.answer(text, reply_markup=SETTINGS_MENU)


@dp.message_handler(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def show_settings(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞/—Ä–∞–∑–¥–µ–ª –ù–∞—Å—Ç—Ä–æ–π–∫–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞."""
    text = '–í—ã–±–∏—Ä–∞–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.'
    await message.answer(text, reply_markup=SETTINGS_MENU)


@dp.message_handler(text='üë• –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É')
async def change_group(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. """
    current_user = db.search(User.id == message.chat.id)
    current_group = current_user[0]['group']
    text = f'–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞: <b>{current_group}</b>.\n\n' \
           f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ' \
           f'–Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã.\n\n' \
           f'–ü—Ä–∏–º–µ—Ä: <b>–ë–ü–ò19-02</b> –∏–ª–∏ <b>–±–ø–∏19-02</b>'
    await UserInfo.group.set()
    await message.answer(text, reply_markup=CHANGING_GROUP_MENU)


@dp.message_handler(text='üöÄ –†–∞c–ø–∏—Å–∞–Ω–∏–µ')
async def show_timetable(message: Message):
    """ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """
    timetable_fail_text = f'–†–∞c–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.\n\n' \
                          f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ:' \
                          f' {SUPPORT}'
    group_not_found_text = '–ö–∞–∂–µ—Ç—Å—è –≤–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ.\n\n' \
                           '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—ë, ' \
                           '–∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É –º–æ–∂–Ω–æ –≤:\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ -> –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É'

    current_user_id = message.chat.id
    current_user = db.search(User.id == current_user_id)
    current_user_group = current_user[0]['group']

    if await does_group_exist(current_user_group):
        if await does_timetable_exist(current_user_group):
            await show_timetable_for_today(current_user_id, current_user_group)
        else:
            await message.answer(timetable_fail_text, reply_markup=MAIN_MENU)
    else:
        await message.answer(group_not_found_text, reply_markup=MAIN_MENU)
